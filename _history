{"entries":[{"timestamp":1752608002077,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":4304,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":945,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":2,"length1":29,"diffs":[[1,"    \"name\": \"Quail Hatching #2\",\n"]]},{"start1":166,"length1":205,"diffs":[[1,"        \"README.md        \"assets.json\"\ny\"\n        \"preferredEditor\": \"blocksprj\",\n    \"additionalFilePaths\": []\nj\"\n"]]}]},{"type":"added","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile1\": {\n        \"data\": \"hwQQABAAAAC3zMzMzMz//6u7u6vMu7vLvLu7u/qZud+8u7u7+pm537y7u7v6mbnfvLu7u/qZud+8u7u7+pm537y7u7v6mbnfvLu7u/qZsd+8u7u7+hm537y7u7v6kbnfvLu7u/qZsd+8u7u7+hmx37y7u7v6Ebnfq7u7q8y7u8u3zMzMzMz//w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"coop\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYTAwMDgwMDAxMDIwMjAyMGEwMjAyMDIwMjAzMDcwOTA5MDkwOTA5MDkwOTA5MDgwNzA5MDkwOTA5MDkwOTA5MDkwODA3MDkwOTA5MDkwOTA5MDkwOTA4MDcwOTA5MDkwOTA5MDkwOTA5MDgwNzA5MDkwOTA5MDkwOTA5MDkwODA3MDkwOTA5MDkwOTA5MDkwOTA4MDUwNjA2MDYwNjA2MDYwNjA2MDQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.castle.tilePath1\",\n            \"sprites.castle.tilePath2\",\n            \"sprites.castle.tilePath3\",\n            \"sprites.castle.tilePath9\",\n            \"sprites.castle.tilePath7\",\n            \"sprites.castle.tilePath8\",\n            \"sprites.castle.tilePath4\",\n            \"sprites.castle.tilePath6\",\n            \"sprites.castle.tilePath5\",\n            \"myTiles.tile1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"added","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n    //% fixedInstance jres blockIdentity=images._tile\n    export const tile1 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tilemap\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"level1\":\n            case \"level1\":return tiles.createTilemap(hex`0a000800010202020a020202020307090909090909090908070909090909090909080709090909090909090807090909090909090908070909090909090909080709090909090909090805060606060606060604`, img`\n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n. . . . . . . . . . \n`, [myTiles.transparency16,sprites.castle.tilePath1,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath9,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath5,myTiles.tile1], TileScale.Sixteen);\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n            case \"coop\":\n            case \"tile1\":return tile1;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"tutorial.custom.ts","value":"namespace SpriteKind {\n    //% isKind\n    export const Quail = SpriteKind.create()\n    //% isKind\n    export const Egg = SpriteKind.create()\n}\ntiles.setTilemap(tilemap`level1`)\nsprites.onDestroyed(SpriteKind.Egg, function (sprite) {\n    quail = sprites.create(img`\n        f f . . . . . . . . . .\n        . . f . . . . . . . . .\n        . c c c c . . . . . . .\n        . c 1 c c b . . . . . .\n        f c c c b d b . . . . .\n        . . b b b d d b . . . .\n        . . b b b d b d b . . .\n        . . b b b b b d d b b b\n        . . b b b b b b b b b b\n        . . . . b b b b b . . .\n        . . . . . 4 . 4 . . . .\n        . . . . . 4 . . . . . .\n        `, SpriteKind.Quail)\n    quail.setPosition(sprite.x, sprite.y)\n    quail.setVelocity(randint(80, 120), randint(80, 120))\n    quail.setBounceOnWall(true)\n    quail.z = 10\n})\nlet quail_egg: Sprite = null\nlet quail: Sprite = null\nfor (let index = 0; index < randint(3, 5); index++) {\n    quail = sprites.create(img`\n        f f . . . . . . . . . .\n        . . f . . . . . . . . .\n        . c c c c . . . . . . .\n        . c 1 c c b . . . . . .\n        f c c c b d b . . . . .\n        . . b b b d d b . . . .\n        . . b b b d b d b . . .\n        . . b b b b b d d b b b\n        . . b b b b b b b b b b\n        . . . . b b b b b . . .\n        . . . . . 4 . 4 . . . .\n        . . . . . 4 . . . . . .\n        `, SpriteKind.Quail)\n    quail.setVelocity(randint(-100, 100), randint(-100, 100))\n    quail.setPosition(randint(10, 150), randint(10, 110))\n    quail.setBounceOnWall(true)\n    quail.z = 10\n}\ngame.onUpdateInterval(3000, function () {\n    if (sprites.allOfKind(SpriteKind.Quail).length < 30) {\n        for (let value of sprites.allOfKind(SpriteKind.Quail)) {\n            let following = game.currentScene().followingSprites;\n            if (!following || !following.some(el => el.self == value)) {\n                quail_egg = sprites.create(img`\n                    . . . c c . . .\n                    . . c 1 1 c . .\n                    . c b 1 1 b c .\n                    c b 1 1 1 b b c\n                    c 1 1 1 1 1 1 c\n                    c 1 1 b 1 1 1 c\n                    . c 1 1 1 b c .\n                    . . c c c c . .\n                    `, SpriteKind.Egg)\n                quail_egg.setPosition(value.x, value.y)\n                quail_egg.lifespan = randint(2000, 3000)\n            }\n        }\n    }\n})\ngame.onUpdate(function() {\n    if (sprites.allOfKind(SpriteKind.Quail).length == 0 && sprites.allOfKind(SpriteKind.Egg).length == 0) {\n        game.over(true)\n    }\n})"}]},{"timestamp":1752608709930,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":1110,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable type=\"KIND_SpriteKind\" id=\"?bCBq:9Po6{;Il7x8l)#\">Player</variable><variable type=\"KIND_SpriteKind\" id=\"54F:,pM)XW:~}(7m4z)V\">Projectile</variable><variable type=\"KIND_SpriteKind\" id=\"+l4u#;EPaw}(kWa})d|m\">Food</variable><variable type=\"KIND_SpriteKind\" id=\"?p[:foVYv[QWs*KHdoL4\">Enemy</variable><variable type=\"KIND_SpriteKind\" id=\"7Ryk?w/~EdcMYdVHS/$?\">Quail</variable><variable type=\"KIND_SpriteKind\" id=\"5,M3~eA16,vgVV.fzKl(\">Egg</variable><variable id=\"9{7i4C^pwBus1$yX64$t\">mySprite</variable><variable id=\"n#TriY`)+Rn,dDw[3?RX\">myEnemy</variable></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"9{7i4C^pwBus1$yX64$t\">mySprite</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"spritescreate\"><value name=\"img\"><shadow type=\"screen_image_picker\"><field name=\"img\">img`\n"]]},{"start1":1508,"length1":3316,"diffs":[[1,"`</field><data>{\"commentRefs\":[],\"fieldData\":{\"img\":null}}</data></shadow></value><value name=\"kind\"><shadow type=\"spritekind\"><field name=\"MEMBER\">Player</field></shadow></value></block></value><next><block type=\"game_control_sprite\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" _expanded=\"0\" _input_init=\"true\"></mutation><value name=\"sprite\"><block type=\"variables_get\"><field name=\"VAR\" id=\"9{7i4C^pwBus1$yX64$t\">mySprite</field></block></value></block></next></block></statement></block><block type=\"spritesoverlap\" x=\"7\" y=\"213\"><value name=\"HANDLER_DRAG_PARAM_sprite\"><block type=\"argument_reporter_custom\"><mutation duplicateondrag=\"true\" typename=\"Sprite\"></mutation><field name=\"VALUE\">sprite</field></block></value><value name=\"kind\"><shadow type=\"spritekind\"><field name=\"MEMBER\">Player</field></shadow></value><value name=\"HANDLER_DRAG_PARAM_otherSprite\"><block type=\"argument_reporter_custom\"><mutation duplicateondrag=\"true\" typename=\"Sprite\"></mutation><field name=\"VALUE\">otherSprite</field></block></value><value name=\"otherKind\"><shadow type=\"spritekind\"><field name=\"MEMBER\">Quail</field></shadow></value><statement name=\"HANDLER\"><block type=\"spriteFollowOtherSprite\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" _expanded=\"0\" _input_init=\"true\"></mutation><value name=\"sprite\"><block type=\"argument_reporter_custom\"><mutation typename=\"Sprite\"></mutation><field name=\"VALUE\">otherSprite</field></block></value><value name=\"target\"><block type=\"variables_get\"><field name=\"VAR\" id=\"9{7i4C^pwBus1$yX64$t\">mySprite</field></block></value><value name=\"speed\"><shadow type=\"math_number\"><field name=\"NUM\">100</field></shadow></value></block></statement></block><block type=\"spriteshittile\" x=\"12\" y=\"357\"><value name=\"HANDLER_DRAG_PARAM_sprite\"><block type=\"argument_reporter_custom\"><mutation duplicateondrag=\"true\" typename=\"Sprite\"></mutation><field name=\"VALUE\">sprite</field></block></value><value name=\"kind\"><shadow type=\"spritekind\"><field name=\"MEMBER\">Player</field></shadow></value><value name=\"tile\"><shadow type=\"tileset_tile_picker\"><field name=\"tile\">assets.tile`coop`</field></shadow></value><value name=\"HANDLER_DRAG_PARAM_location\"><block type=\"argument_reporter_custom\"><mutation duplicateondrag=\"true\" typename=\"tiles.Location\"></mutation><field name=\"VALUE\">location</field></block></value><statement name=\"HANDLER\"><block type=\"spritedestroy\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" _expanded=\"0\" _input_init=\"true\"></mutation><field name=\"effect\">effects.spray</field><value name=\"sprite\"><block type=\"argument_reporter_custom\"><mutation typename=\"Sprite\"></mutation><field name=\"VALUE\">sprite</field></block></value><value name=\"duration\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value></block></statement></block></xml>"]]}]}]},{"timestamp":1752608715547,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":332,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1752608002076,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":"","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"Quail Hatching\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"blocksprj\",\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1752608715555}